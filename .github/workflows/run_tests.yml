name: CI/CD Tests

on:
  push:
    branches:
      - main

    paths:
      - "**.py"
      - ".github/workflows/*test*.yml"
      - "pyproject.toml"
      - "poetry.lock"
      - "requirements/requirements*.txt"
  pull_request:
    paths:
      - "**.py"
      - ".github/workflows/*test*.yml"
      - "pyproject.toml"
      - "poetry.lock"
      - "requirements/requirements*.txt"

jobs:
  test:
    name: test Python ${{ matrix.python }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@main
      - uses: actions/setup-python@main
        with:
          python-version: ${{ matrix.python }}
      - uses: actions/cache@main
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: test-${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml', 'requirements/*') }}
      - run: pip install -r requirements/requirements-dev.txt
      - run: python --version
      - run: python -m pip --version
      - run: pytest --version
      - run: python -m pip cache info
      - run: pre-commit run end-of-file-fixer --all-files
      - run: black --check src
      - run: isort --check-only src
      - run: ruff check src
      - run: mypy src --ignore-missing-imports --disable-error-code import-untyped
      - run: pyright src
      - name: Run tests and collect coverage
        run: pytest --cov --cov-report=xml
      - name: Send coverage report to codecov
        uses: codecov/codecov-action@v4.2.0
        with:
          env_vars: OS=${{ matrix.os }},PYTHON=${{ matrix.python }}
          file: ./coverage.xml
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
